(()=>{"use strict";function t(t){const e=new Date;return e.setDate(e.getDate()+t),e.toISOString()}const e={icons:[{icon_id:1,icon_name:"page.png"},{icon_id:2,icon_name:"home.png"},{icon_id:3,icon_name:"other.png"},{icon_id:4,icon_name:"warning.png"},{icon_id:5,icon_name:"alert.png"},{icon_id:6,icon_name:"ball.png"},{icon_id:7,icon_name:"bug.png"},{icon_id:8,icon_name:"cart.png"},{icon_id:9,icon_name:"favorite.png"},{icon_id:10,icon_name:"inbox.png"},{icon_id:11,icon_name:"life.png"},{icon_id:12,icon_name:"mail.png"},{icon_id:13,icon_name:"twitter.png"},{icon_id:14,icon_name:"note.png"}],statuses:[{status_id:1,status:"низкий",color:"#808080"},{status_id:2,status:"нормальный",color:"#000000"},{status_id:3,status:"повышенный",color:"#008000"},{status_id:4,status:"высокий",color:"#E56353"}],categories:[{category_id:1,icon_id:3,category:"Работа"},{category_id:2,icon_id:2,category:"Дом"},{category_id:3,icon_id:6,category:"Здоровье"},{category_id:4,icon_id:7,category:"Фигня"}],todos:[{todo_id:1,status_id:1,category_id:1,todo:"Todo1",deleted:!1},{todo_id:2,status_id:2,category_id:2,todo:"Hover your mouse over a project or item and click the icon on the right side of the item for more",due_date:t(-1)},{todo_id:3,status_id:3,category_id:3,todo:"Todo3",due_date:function(t){const e=new Date;return e.setMinutes(e.getMinutes()+1),e.toISOString()}()},{todo_id:4,status_id:4,category_id:1,todo:"Todo4",due_date:t(1),completed:!0,deleted:!1},{todo_id:5,status_id:4,todo:"Todo5"},{todo_id:6,status_id:4,todo:"Todo6",completed:!0,deleted:!1},{todo_id:7,status_id:2,todo:"Todo7",completed:!0,deleted:!0}]};self.VERSION="1.0.0";const o="/api/get_todos",n={"Content-Type":"application/json; charset=utf-8"};let s;async function i(){const t=await caches.open("todo-sw"),e=JSON.stringify(s);await t.put(o,new Response(e,{headers:new Headers({...n,"Content-Length":String(e.length)})}))}self.addEventListener("fetch",(function(t){var e=new URL(t.request.url);const o=e.pathname.slice(5);if("POST"!==t.request.method)if("PATCH"!==t.request.method)if("DELETE"!==t.request.method)"GET"!==t.request.method||"/api/get_todos"!==e.pathname||t.respondWith(new Response(JSON.stringify(s),{headers:n}));else{const e=t.request.clone();t.respondWith(async function(t,e){const o=await t.json();switch(e){case"delete_category":{const t=new Response(JSON.stringify(o),{status:200});return i(),t}case"delete_todo":{const t=new Response(JSON.stringify(o),{status:200});return i(),t}default:return new Response(null,{status:404})}}(e,o))}else{const e=t.request.clone();t.respondWith(async function(t,e){const o=await t.json();switch(e){case"update_category":{const t=new Response(JSON.stringify(o),{status:200});return i(),t}case"update_todo":{const t=new Response(JSON.stringify(o),{status:200});return i(),t}default:return new Response(null,{status:404})}}(e,o))}else{if(!t.request.body)return;const e=t.request.clone();t.respondWith(async function(t,e){const o=await t.json();switch(e){case"create_category":{const t=new Response(JSON.stringify(o),{headers:n,status:200});return i(),t}case"create_todo":{const t=new Response(JSON.stringify(o),{status:200});return i(),t}case"log":switch(o.type){case"info":a("%c[INFO]","color: blue; font-weight: 600;",o);break;case"warn":a("%c[WARN]","color: #ff9905; font-weight: 600;",o);break;case"error":a("%c[ERROR]","color: #E56353;; font-weight: 600;",o)}return new Response(null,{status:200});default:return new Response(null,{status:404})}}(e,o))}}));const{log:a}=console;self.addEventListener("install",(t=>{self.skipWaiting()})),self.addEventListener("activate",(t=>{t.waitUntil((async()=>{const t=await caches.open("todo-sw");if(!s){const n=await t.match(o);if(void 0!==n){const t=await n.json();t&&(s=t)}s||(s=e,await i())}})()),clients.claim()}))})();